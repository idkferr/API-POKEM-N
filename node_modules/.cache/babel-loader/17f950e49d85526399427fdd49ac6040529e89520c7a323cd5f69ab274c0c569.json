{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ferna\\\\GuiaFrontApiRest-master\\\\src\\\\pages\\\\Home\\\\components\\\\ListarPokemon.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Typography, Card, CardContent, CircularProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListarPokemon() {\n  _s();\n  const [pokemons, setPokemons] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchPokemons = async () => {\n      try {\n        const response = await fetch('https://pokeapi.co/api/v2/pokemon?limit=50');\n        if (!response.ok) {\n          throw new Error('Failed to fetch');\n        }\n        const data = await response.json();\n        setPokemons(data.results);\n      } catch (error) {\n        console.error('Error fetching pokemons:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPokemons();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: pokemons.map(pokemon => /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        margin: 2,\n        width: '90%',\n        maxWidth: 360\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          children: pokemon.name.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, pokemon.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(ListarPokemon, \"fQreVV4R/KyuEkWz0eG2YtCgNFw=\");\n_c = ListarPokemon;\nexport default ListarPokemon;\nvar _c;\n$RefreshReg$(_c, \"ListarPokemon\");","map":{"version":3,"names":["React","useEffect","useState","Box","Typography","Card","CardContent","CircularProgress","jsxDEV","_jsxDEV","ListarPokemon","_s","pokemons","setPokemons","loading","setLoading","fetchPokemons","response","fetch","ok","Error","data","json","results","error","console","fileName","_jsxFileName","lineNumber","columnNumber","sx","display","flexDirection","alignItems","children","map","pokemon","margin","width","maxWidth","variant","component","name","toUpperCase","_c","$RefreshReg$"],"sources":["C:/Users/ferna/GuiaFrontApiRest-master/src/pages/Home/components/ListarPokemon.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Box, Typography, Card, CardContent, CircularProgress } from '@mui/material';\n\nfunction ListarPokemon() {\n  const [pokemons, setPokemons] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchPokemons = async () => {\n      try {\n        const response = await fetch('https://pokeapi.co/api/v2/pokemon?limit=50');\n        if (!response.ok) {\n          throw new Error('Failed to fetch');\n        }\n        const data = await response.json();\n        setPokemons(data.results);\n      } catch (error) {\n        console.error('Error fetching pokemons:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPokemons();\n  }, []);\n\n  if (loading) return <CircularProgress />;\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      {pokemons.map((pokemon) => (\n        <Card key={pokemon.name} sx={{ margin: 2, width: '90%', maxWidth: 360 }}>\n          <CardContent>\n            <Typography variant=\"h6\" component=\"div\">\n              {pokemon.name.toUpperCase()}\n            </Typography>\n          </CardContent>\n        </Card>\n      ))}\n    </Box>\n  );\n}\n\nexport default ListarPokemon;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,UAAU,EAAEC,IAAI,EAAEC,WAAW,EAAEC,gBAAgB,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErF,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMe,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC;QAC1E,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;QACpC;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCT,WAAW,CAACQ,IAAI,CAACE,OAAO,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,CAAC,SAAS;QACRT,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE,oBAAOL,OAAA,CAACF,gBAAgB;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAExC,oBACEpB,OAAA,CAACN,GAAG;IAAC2B,EAAE,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAC,QAAA,EACzEtB,QAAQ,CAACuB,GAAG,CAAEC,OAAO,iBACpB3B,OAAA,CAACJ,IAAI;MAAoByB,EAAE,EAAE;QAAEO,MAAM,EAAE,CAAC;QAAEC,KAAK,EAAE,KAAK;QAAEC,QAAQ,EAAE;MAAI,CAAE;MAAAL,QAAA,eACtEzB,OAAA,CAACH,WAAW;QAAA4B,QAAA,eACVzB,OAAA,CAACL,UAAU;UAACoC,OAAO,EAAC,IAAI;UAACC,SAAS,EAAC,KAAK;UAAAP,QAAA,EACrCE,OAAO,CAACM,IAAI,CAACC,WAAW,CAAC;QAAC;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC,GALLO,OAAO,CAACM,IAAI;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMjB,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAClB,EAAA,CAtCQD,aAAa;AAAAkC,EAAA,GAAblC,aAAa;AAwCtB,eAAeA,aAAa;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}