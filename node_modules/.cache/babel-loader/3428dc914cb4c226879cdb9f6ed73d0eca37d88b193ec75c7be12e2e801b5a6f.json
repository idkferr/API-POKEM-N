{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ferna\\\\GuiaFrontApiRest-master\\\\src\\\\pages\\\\Home\\\\components\\\\PokemonDetails.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Card, CardContent, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PokemonDetails() {\n  _s();\n  const [pokemon, setPokemon] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"https://pokeapi.co/api/v2/pokemon/ditto\");\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const data = await response.json();\n        setPokemon(data);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"There was an error fetching the Pokémon:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Cargando...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: pokemon && /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: pokemon.name.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"ID: \", pokemon.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Abilities:\", \" \", pokemon.abilities.map(a => a.ability.name).join(\", \")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Types: \", pokemon.types.map(t => t.type.name).join(\", \")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Stats:\", \" \", pokemon.stats.map(s => `${s.stat.name}: ${s.base_stat}`).join(\", \")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(PokemonDetails, \"AFL8fGAYgOBly3n5tM7rY58//jU=\");\n_c = PokemonDetails;\nexport default PokemonDetails;\nvar _c;\n$RefreshReg$(_c, \"PokemonDetails\");","map":{"version":3,"names":["Box","Card","CardContent","Typography","React","useEffect","useState","jsxDEV","_jsxDEV","PokemonDetails","_s","pokemon","setPokemon","loading","setLoading","fetchData","response","fetch","ok","Error","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","name","toUpperCase","id","abilities","map","a","ability","join","types","t","type","stats","s","stat","base_stat","_c","$RefreshReg$"],"sources":["C:/Users/ferna/GuiaFrontApiRest-master/src/pages/Home/components/PokemonDetails.jsx"],"sourcesContent":["import { Box, Card, CardContent, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\n\n\nfunction PokemonDetails() {\n  const [pokemon, setPokemon] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"https://pokeapi.co/api/v2/pokemon/ditto\");\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const data = await response.json();\n        setPokemon(data);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"There was an error fetching the Pokémon:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) return <p>Cargando...</p>;\n\n  return (\n    <Box>\n      {pokemon && (\n        <Card>\n          <CardContent>\n            <Typography variant=\"h5\">{pokemon.name.toUpperCase()}</Typography>\n            <Typography variant=\"body2\">ID: {pokemon.id}</Typography>\n            <Typography variant=\"body2\">\n              Abilities:{\" \"}\n              {pokemon.abilities.map((a) => a.ability.name).join(\", \")}\n            </Typography>\n            <Typography variant=\"body2\">\n              Types: {pokemon.types.map((t) => t.type.name).join(\", \")}\n            </Typography>\n            <Typography variant=\"body2\">\n              Stats:{\" \"}\n              {pokemon.stats\n                .map((s) => `${s.stat.name}: ${s.base_stat}`)\n                .join(\", \")}\n            </Typography>\n          </CardContent>\n        </Card>\n      )}\n    </Box>\n  );\n}\n\nexport default PokemonDetails;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}